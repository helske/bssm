% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{ssm_mng}
\alias{ssm_mng}
\title{General Non-Gaussian/Non-linear State Space Model}
\usage{
ssm_mng(
  y,
  Z,
  T,
  R,
  a1,
  P1,
  distribution,
  phi = 1,
  u = 1,
  init_theta = numeric(0),
  xreg = NULL,
  D,
  C,
  state_names,
  update_fn = default_update_fn,
  prior_fn = default_prior_fn
)
}
\arguments{
\item{y}{Observations as multivariate time series or matrix with dimensions n x p.}

\item{Z}{System matrix Z of the observation equation as p x m matrix or p x m x n array.}

\item{T}{System matrix T of the state equation. Either a m x m matrix or a
m x m x n array. UPDATE!!}

\item{R}{Lower triangular matrix R the state equation. Either a m x k matrix or a
m x k x n array.}

\item{a1}{Prior mean for the initial state as a vector of length m.}

\item{P1}{Prior covariance matrix for the initial state as m x m matrix.}

\item{init_theta}{Initial values for the unknown hyperparameters theta.}

\item{xreg}{Matrix of n rows and arbitrary number of columns containing covariates. 
This matrix is not used by default, but can be used to supply additional data to 
\code{update_fn} (where you can, e.g. input the regression part to D).}

\item{D}{Intercept terms for observation equation, given as a length n vector.}

\item{C}{Intercept terms for state equation, given as m x n matrix.}

\item{state_names}{Names for the states.}

\item{update_fn}{Function which returns list of updated model 
components given input vector theta. See details.}

\item{prior_fn}{Function which returns log of prior density 
given input vector theta. See details.}

\item{H}{Lower triangular matrix H of the observation. Either a scalar or a vector of length n.}
}
\value{
Object of class \code{ssm_mng}. UDPATE!!
}
\description{
Constructs an object of class \code{ssm_mng} by defining the corresponding terms
of the observation and state equation:
}
\details{
\deqn{p^i(y^_t | Z_t \alpha_t), (\textrm{observation equation})}
\deqn{\alpha_{t+1} = T_t \alpha_t + R_t \eta_t, (\textrm{transition equation})}

where \eqn{\eta_t \sim N(0, I_k)} and
\eqn{\alpha_1 \sim N(a_1, P_1)} independently of each other, and \eqn{p^i(y_t | .)}
is either Poisson, binomial or negative binomial distribution for 
each observation series \eqn{i=1,...,k}.

Compared to other models, these general models need a bit more effort from
the user, as you must provide the several small C++ snippets which define the
model structure. Note that due to the use of pointers, 
you must recompile and construct the model objects in each `R` session, 
i.e. saving and later loading the model object is not sufficient. 
See examples in the package vignette.
}
