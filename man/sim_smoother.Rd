% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_smoother.R
\name{sim_smoother}
\alias{sim_smoother}
\alias{sim_smoother.ssm_ulg}
\alias{sim_smoother.bsm_lg}
\alias{sim_smoother.ar1_lg}
\alias{sim_smoother.ssm_ung}
\alias{sim_smoother.bsm_ng}
\alias{sim_smoother.svm}
\alias{sim_smoother.ar1_ng}
\title{Simulation Smoothing}
\usage{
sim_smoother(object, nsim, seed, use_antithetic = FALSE, ...)

\method{sim_smoother}{ssm_ulg}(
  object,
  nsim = 1,
  seed = sample(.Machine$integer.max, size = 1),
  use_antithetic = FALSE,
  method = "dk",
  ...
)

\method{sim_smoother}{bsm_lg}(
  object,
  nsim = 1,
  seed = sample(.Machine$integer.max, size = 1),
  use_antithetic = FALSE,
  method = "dk",
  ...
)

\method{sim_smoother}{ar1_lg}(
  object,
  nsim = 1,
  seed = sample(.Machine$integer.max, size = 1),
  use_antithetic = FALSE,
  method = "dk",
  ...
)

\method{sim_smoother}{ssm_ung}(
  object,
  nsim = 1,
  seed = sample(.Machine$integer.max, size = 1),
  use_antithetic = FALSE,
  ...
)

\method{sim_smoother}{bsm_ng}(
  object,
  nsim = 1,
  seed = sample(.Machine$integer.max, size = 1),
  use_antithetic = FALSE,
  ...
)

\method{sim_smoother}{svm}(
  object,
  nsim = 1,
  seed = sample(.Machine$integer.max, size = 1),
  use_antithetic = FALSE,
  ...
)

\method{sim_smoother}{ar1_ng}(
  object,
  nsim = 1,
  seed = sample(.Machine$integer.max, size = 1),
  use_antithetic = FALSE,
  ...
)
}
\arguments{
\item{object}{Model object.}

\item{nsim}{Number of independent samples.}

\item{seed}{Seed for the random number generator.}

\item{use_antithetic}{Use an antithetic variable for location. Default is \code{FALSE}. Only used if \code{method} is "dk".}

\item{...}{Ignored.}

\item{method}{If \code{"dk"} (default), use simulation smoothing algorithm by Durbin and Koopman (2002). If \code{"psi"}, use twisted SMC. 
Only used for Gaussian models of class \code{"ssm_ulg"}, \code{"bsm"}, and \code{"ar1_lg"}.}
}
\value{
An array containing the generated samples.
}
\description{
Function \code{sim_smoother} performs simulation smoothing i.e. simulates the states
from the conditional distribution \eqn{p(\alpha | y, \theta)}.
}
\details{
For non-Gaussian/non-linear models, the simulation is based on the approximating
Gaussian model.
}
\examples{
model <- bsm_lg(rep(NA, 50), sd_level = uniform(1,0,5), sd_y = uniform(1,0,5))
sim <- sim_smoother(model, 12)
ts.plot(sim[, 1, ])
}
